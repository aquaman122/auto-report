version: '3.8'

services:
  # n8n 워크플로우 자동화
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n_voice_meeting
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - GENERIC_TIMEZONE=Asia/Seoul
      - N8N_DEFAULT_LOCALE=ko
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - WEBHOOK_URL=http://localhost:5678/
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./uploads:/home/node/uploads:ro
      - ./summaries:/home/node/summaries:ro
    networks:
      - meeting_network
    depends_on:
      - meeting-api

  # Node.js API 서버
  meeting-api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: meeting_api
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
      - ./summaries:/app/summaries
      - ./logs:/app/logs
    networks:
      - meeting_network
    depends_on:
      - redis

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: redis_meeting
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - meeting_network

volumes:
  n8n_data:
  redis_data:

networks:
  meeting_network:
    driver: bridge